<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanz.stuspringbootdemo.dao.RoleMapper" >

  <resultMap id="BaseResultMap" type="com.hanz.stuspringbootdemo.domain.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="role_name" jdbcType="VARCHAR" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
  </resultMap>

  <insert id="insertRole" parameterType="com.hanz.stuspringbootdemo.domain.Role" >
    insert into role (id,role_name,user_id)
    values (
      #{id,jdbcType=INTEGER},
      #{role_name,jdbcType=VARCHAR},
      #{user_id,jdbcType=INTEGER}
    )
  </insert>

  <update id="updateRole" parameterType="com.hanz.stuspringbootdemo.domain.Role" >
    update role
    <set >
      <if test="role_name != null" >
        role_name = #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectRoleById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id,role_name,user_id
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteRole" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <select id="getRoleByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT role.id,role_name,user_id
    FROM user,role
    WHERE user.id = role.user_id and name =  #{username,jdbcType=VARCHAR}
  </select>

  <select id="getRolesByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT role.id,role_name,user_id
    FROM user,role
    WHERE user.id = role.user_id and name =  #{username,jdbcType=VARCHAR}
  </select>

</mapper>